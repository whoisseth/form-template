{
  "content": "\"use client\";\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage\r\n} from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue\r\n} from \"@/components/ui/select\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { toast } from \"@/components/ui/use-toast\";\r\nimport { IndianRupee, Plus } from \"lucide-react\";\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\r\n\r\n// ****** //\r\n// Get the current date and time in the required format\r\nconst currentDate = new Date();\r\n\r\nconst year = currentDate.getFullYear();\r\nconst month = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Months are zero-indexed\r\nconst day = String(currentDate.getDate()).padStart(2, \"0\");\r\nconst hours = String(currentDate.getHours()).padStart(2, \"0\");\r\nconst minutes = String(currentDate.getMinutes()).padStart(2, \"0\");\r\nconst formattedDateTime = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n// ****** //\r\n\r\nconst currentDateTime = formattedDateTime;\r\n\r\nconst profileFormSchema = z.object({\r\n  amount: z\r\n    .number()\r\n    .min(1, { message: \"Amount should be greater than 0\" })\r\n    .refine((value) => !isNaN(value), { message: \"Amount is required\" }),\r\n  label: z.string().max(30, {\r\n    message: \"Label must not be longer than 30 characters.\"\r\n  }),\r\n  type: z.enum([\"expense\", \"income\"]),\r\n  category: z.string().optional(),\r\n  note: z.string().max(160).optional(),\r\n  dateTime: z.string().optional().default(currentDateTime)\r\n});\r\n\r\ntype ProfileFormValues = z.infer<typeof profileFormSchema>;\r\n\r\n// This can come from your database or API.\r\nconst defaultValues: Partial<ProfileFormValues> = {\r\n  type: \"expense\"\r\n};\r\n\r\nexport function ExpenseForm() {\r\n  const form = useForm<ProfileFormValues>({\r\n    resolver: zodResolver(profileFormSchema),\r\n    defaultValues,\r\n    mode: \"onChange\"\r\n  });\r\n\r\n  function onSubmit(data: ProfileFormValues) {\r\n    console.log(\"data\", data);\r\n    toast({\r\n      title: \"You submitted the following values:\",\r\n      description: (\r\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\r\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\r\n        </pre>\r\n      )\r\n    });\r\n  }\r\n\r\n  const sampleCategories = [\r\n    \"Groceries\",\r\n    \"Utilities\",\r\n    \"Transportation\",\r\n    \"Entertainment\",\r\n    \"Healthcare\"\r\n  ];\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form\r\n        onSubmit={form.handleSubmit(onSubmit)}\r\n        className=\"flex flex-col gap-3\"\r\n      >\r\n        <div>\r\n          <h2 className=\"text-xl font-semibold\">Add Transactions</h2>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Quickly add your income or expense details.\r\n          </p>\r\n        </div>\r\n        {/* Amount */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"amount\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Amount *</FormLabel>\r\n              <FormControl>\r\n                <div className=\"relative flex items-center\">\r\n                  <IndianRupee className=\" size-4 left-2 absolute \" />\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"00\"\r\n                    className=\"pl-6\"\r\n                    {...field}\r\n                    onChange={(event) => field.onChange(+event.target.value)}\r\n                  />\r\n                </div>\r\n              </FormControl>\r\n\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        {/* Label */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"label\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Label *</FormLabel>\r\n\r\n              <FormControl>\r\n                <Input placeholder=\"Food\" {...field} />\r\n              </FormControl>\r\n\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        {/*Type  */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"type\"\r\n          render={({ field }) => (\r\n            <FormItem className=\"space-y-3\">\r\n              <FormLabel>Type *</FormLabel>\r\n              <FormControl>\r\n                <RadioGroup\r\n                  onValueChange={field.onChange}\r\n                  defaultValue={field.value}\r\n                  className=\"flex gap-5\"\r\n                >\r\n                  <FormItem className=\"flex items-center space-x-3 space-y-0\">\r\n                    <FormControl>\r\n                      <RadioGroupItem value=\"expense\" />\r\n                    </FormControl>\r\n                    <FormLabel className=\"font-normal\">Expense</FormLabel>\r\n                  </FormItem>\r\n                  <FormItem className=\"flex items-center space-x-3 space-y-0\">\r\n                    <FormControl>\r\n                      <RadioGroupItem value=\"income\" />\r\n                    </FormControl>\r\n                    <FormLabel className=\"font-normal\">Income</FormLabel>\r\n                  </FormItem>\r\n                </RadioGroup>\r\n              </FormControl>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        {/* Category*/}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"category\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Category</FormLabel>\r\n              <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                <FormControl>\r\n                  <SelectTrigger>\r\n                    <SelectValue\r\n                      className=\"capitalize\"\r\n                      placeholder=\"Select Category\"\r\n                    />\r\n                  </SelectTrigger>\r\n                </FormControl>\r\n                <SelectContent>\r\n                  {sampleCategories.map((value, i) => (\r\n                    <SelectItem className=\"capitalize\" key={i} value={value}>\r\n                      {value}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        {/* Note */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"note\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Note</FormLabel>\r\n              <FormControl>\r\n                <Textarea\r\n                  placeholder=\"Add More details in it\"\r\n                  className=\"resize-none\"\r\n                  {...field}\r\n                />\r\n              </FormControl>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        {/* Date & Time */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"dateTime\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Date & Time </FormLabel>\r\n              <FormControl>\r\n                <Input\r\n                  type=\"datetime-local\"\r\n                  className=\"resize-none\"\r\n                  defaultValue={currentDateTime}\r\n                  {...field}\r\n                />\r\n              </FormControl>\r\n\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        <Button type=\"submit\">\r\n          <Plus className=\"mr-2 size-4\" /> Add Transaction\r\n        </Button>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n"
}